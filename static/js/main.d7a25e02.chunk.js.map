{"version":3,"sources":["logo.svg","components/Navbar.js","components/SlideShow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbarr","styled","div","divStyle","display","this","props","className","style","src","href","target","Component","SlideShow","state","pictureURl","current","articleURL","picturesBar","data","map","eachArticle","i","multimedia","length","key","alt","onClick","changeDisplay","url","e","console","log","setState","onclick","rendered","function","componentDidMount","wrapper","document","getElementById","topLayer","querySelector","handle","skew","delta","indexOf","addEventListener","clientX","window","innerWidth","left","width","stylePic","id","App","componentWillMount","axios","get","then","results","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7a25e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport default class Navbarr extends Component {\n\trender() {\n\t\tconst Link = styled.div`\n\t\t\tcolor: white;\n\t\t\tdisplay: flex;\n\t\t\t:hover {\n\t\t\t\tcolor: black;\n\t\t\t\tbackground: white;\n\t\t\t\ttransition: 0.7s;\n\t\t\t}\n\t\t`;\n\t\tconst divStyle = {\n\t\t\tdisplay: `${this.props.display}`\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"navbar flex \" style={divStyle}>\n\t\t\t\t<div className=\"logo logo-container\">\n\t\t\t\t\t<img className=\" logo-pic logo\" src=\"new-york-times.png\" />\n\t\t\t\t</div>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://developer.nytimes.com/\" target=\"blank\" className=\"nav-link\">\n\t\t\t\t\t\t\tNew York API\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/ChristianRoque\" target=\"blank\" className=\"nav-link\">\n\t\t\t\t\t\t\tGithub\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class SlideShow extends Component {\n\tstate = {\n\t\tpictureURl: 'galaxy.gif',\n\t\tcurrent: 0,\n\t\tarticleURL: '#',\n\t\ttarget: ''\n\t};\n\n\tpicturesBar = () => {\n\t\treturn this.props.data.map((eachArticle, i) => {\n\t\t\tif (eachArticle.multimedia.length == 0) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<a key={i} href=\"#\" className=\"links\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt={i}\n\t\t\t\t\t\t\tonClick={this.changeDisplay}\n\t\t\t\t\t\t\tclassName=\"bar-logo\"\n\t\t\t\t\t\t\tsrc={eachArticle.multimedia[0].url}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\n\tchangeDisplay = (e) => {\n\t\tconsole.log(e.target.alt, 'works');\n\n\t\tthis.setState({\n\t\t\tpictureURl: this.props.data[e.target.alt].multimedia[4].url,\n\t\t\tarticleURL: this.props.data[e.target.alt].url,\n\t\t\ttarget: 'blank'\n\t\t});\n\t};\n\n\tonclick = () => {\n\t\tif (!this.state.rendered) {\n\t\t\tthis.props.function();\n\t\t\tthis.setState({\n\t\t\t\tpictureURl: this.props.data[this.state.current].multimedia[4].url\n\t\t\t});\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tlet wrapper = document.getElementById('wrapper');\n\t\tlet topLayer = wrapper.querySelector('.top');\n\t\tlet handle = wrapper.querySelector('.handle');\n\t\tlet skew = 0;\n\t\tlet delta = 0;\n\n\t\tif (wrapper.className.indexOf('skewed') != -1) {\n\t\t\tskew = 1000;\n\t\t}\n\n\t\twrapper.addEventListener('mousemove', function(e) {\n\t\t\tdelta = e.clientX - window.innerWidth / 2 * 0.5;\n\n\t\t\thandle.style.left = e.clientX + delta + 'px';\n\n\t\t\ttopLayer.style.width = e.clientX + skew + delta + 'px';\n\t\t});\n\t};\n\n\trender() {\n\t\tconsole.log(this.props.data, 'these are the props');\n\t\tlet stylePic = {\n\t\t\tdisplay: `${this.props.display}`\n\t\t};\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"space flex center\">\n\t\t\t\t\t<div className=\"bar-pictures-container\" style={stylePic}>\n\t\t\t\t\t\t{this.picturesBar()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t<div className=\"space\" />\n\t\t\t\t\t<section id=\"wrapper\" className=\"skewed\">\n\t\t\t\t\t\t<div className=\"layer bottom\">\n\t\t\t\t\t\t\t<div className=\"content-wrap\">\n\t\t\t\t\t\t\t\t<div className=\"content-body\">\n\t\t\t\t\t\t\t\t\t<h1>Look Sharp</h1>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Vero accusantium facere\n\t\t\t\t\t\t\t\t\t\tunde temporibus sequi aut quod excepturi, blanditiis reiciendis possimus.\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<img src=\"\" alt=\"\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"layer top\">\n\t\t\t\t\t\t\t<div className=\"content-wrap\">\n\t\t\t\t\t\t\t\t<div className=\"content-body\">\n\t\t\t\t\t\t\t\t\t<a href={this.state.articleURL} target={this.state.target}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"fetch\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"New-York-Times-logo-removebg-preview.png\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.onclick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tid=\"fetch-ghost\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"New-York-Times-logo-removebg-preview.png\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.onclick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<img src={this.state.pictureURl} alt=\"\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"handle\" />\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// document.addEventListener('DOMContentLoaded', function() {\n// \tlet wrapper = document.getElementById('wrapper');\n// \tlet topLayer = wrapper.querySelector('.top');\n// \tlet handle = wrapper.querySelector('.handle');\n// \tlet skew = 0;\n// \tlet delta = 0;\n\n// \tif (wrapper.className.indexOf('skewed') != -1) {\n// \t\tskew = 1000;\n// \t}\n\n// \twrapper.addEventListener('mousemove', function(e) {\n// \t\tdelta = e.clientX - window.innerWidth / 2 * 0.5;\n\n// \t\thandle.style.left = e.clientX + delta + 'px';\n\n// \t\ttopLayer.style.width = e.clientX + skew + delta + 'px';\n// \t});\n// });\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport SlideShow from './components/SlideShow';\nimport axios from 'axios';\n\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n\tstate = {\n\t\tdisplay: 'none'\n\t};\n\tcomponentWillMount = () => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t'https://api.nytimes.com/svc/topstories/v2/science.json?q=person&api-key=BvqS8W96aazmsaOtCxkvUOxEImk19Cla'\n\t\t\t)\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tresults: data.data.results\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tchangeDisplay = () => {\n\t\tthis.setState({\n\t\t\tdisplay: ''\n\t\t});\n\t};\n\n\trender() {\n\t\tif (!this.state.results) {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar display={this.state.display} />\n\t\t\t\t<SlideShow data={this.state.results} display={this.state.display} function={this.changeDisplay} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}